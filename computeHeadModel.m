function [success, headModelPath] = computeHeadModel(SubjectName, ConditionName, addLog)
% Compute head model for the given subject + condition
% e.g. computeHeadModel('Subject_001','Night1_NegPeak')
    success = false;
    headModelPath = '';

    bst_report('Start', []);
    sFiles = bst_process('CallProcess', 'process_select_files_data', [], [], ...
        'subjectname',   SubjectName, ...
        'condition',     ConditionName, ...
        'tag',           '', ...
        'includebad',    0, ...
        'includeintra',  0, ...
        'includecommon', 0, ...
        'outprocesstab', 'process1');

    if isempty(sFiles)
        addLog(sprintf('WARNING: No data found for %s => skipping head model computation.', ConditionName));
        return;
    end

    try
        bst_process('CallProcess', 'process_headmodel', sFiles, [], ...
            'Comment',      '', ...
            'sourcespace',  1, ...   % Cortex surface
            'meg',          3, ...   % Overlapping spheres
            'eeg',          3, ...   % OpenMEEG BEM
            'ecog',         2, ...
            'seeg',         2, ...
            'openmeeg', struct( ...
                'BemFiles',    {{}}, ...
                'BemNames',    {{'Scalp','Skull','Brain'}}, ...
                'BemCond',     [1,0.0125,1], ...
                'BemSelect',   [1,1,1], ...
                'isAdjoint',   0, ...
                'isAdaptative',1, ...
                'isSplit',     0, ...
                'SplitLength', 4000), ...
            'channelfile',  '');
        bst_report('Save', []);

        % Capture the path of the newly computed head model
        sStudyHM = bst_get('StudyWithCondition', [SubjectName '/' ConditionName]);
        if ~isempty(sStudyHM) && isfield(sStudyHM, 'HeadModel') && ~isempty(sStudyHM.HeadModel) && isfield(sStudyHM.HeadModel(1), 'FileName')
            headModelPath = file_fullpath(sStudyHM.HeadModel(1).FileName);
            success = true;
        else
            addLog(sprintf('WARNING: Head model computed for %s, but could not retrieve its file path from Brainstorm database.', ConditionName));
        end

    catch ME
        addLog(sprintf('ERROR computing head model for %s/%s: %s', SubjectName, ConditionName, ME.message));
    end
end
